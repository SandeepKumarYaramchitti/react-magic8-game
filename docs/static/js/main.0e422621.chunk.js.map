{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","userInput","setUserInput","randomIndex","setRandomIndex","error","setError","answer","className","type","value","onChange","event","preventDefault","console","log","target","onClick","Math","round","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAkEeA,MA9Df,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAyCQC,EAvBgB,CACtB,gBACA,qBACA,kBACA,kBACA,qBACA,mBACA,eACA,MACA,qBACA,uBACA,kBACA,0BACA,qBACA,4BACA,oBACA,iBACA,oBACA,cACA,sBACA,iBAG+BJ,GAC/B,OACE,sBAAKK,UAAU,MAAf,UACE,6DACA,mBAAGA,UAAU,OAAb,wDACA,uBAAOC,KAAK,OAAOD,UAAU,WAAWE,MAAOT,EAAWU,SA5CtC,SAACC,GACzBA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,OAAON,OACzBR,EAAaU,EAAMI,OAAON,UA0CtB,qBAAKF,UAAU,aAAf,SACE,qBAAKA,UAAU,UAAUS,QAxCb,WACbhB,GACFK,EAAS,IACTF,EAAec,KAAKC,MAAsB,GAAhBD,KAAKE,WAC/BlB,EAAa,KAEbI,EAAS,sCAkCN,SACCD,EAAQ,mBAAGG,UAAU,QAAb,SAAsBH,IAC7BE,EAAS,mBAAGC,UAAU,SAAb,SAAuBD,IAAc,mBAAGC,UAAU,QAAb,uBC9C3Ca,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0e422621.chunk.js","sourcesContent":["\nimport React, {useState} from 'react'\nimport './App.css';\n\nfunction App() {\n\n  const [userInput, setUserInput] = useState('');\n  const [randomIndex, setRandomIndex] = useState(0);\n  const [error, setError] = useState('');\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    console.log(event.target.value)\n    setUserInput(event.target.value)\n  }\n\n  const handleClick = () => {\n     if (userInput) {\n       setError('')\n       setRandomIndex(Math.round(Math.random() * 20));\n       setUserInput('')\n     } else {\n       setError('Enter question to know the answer');\n     }\n  }\n\n  const possibleAnswers = [\n    'It is certain',\n    'It is decidedly so',\n    'Without a doubt',\n    'Yes, definitely',\n    'You may rely on it',\n    'As I see it, yes',\n    'Outlook good',\n    'Yes',\n    'Signs point to yes',\n    'Reply hazy try again',\n    'Ask again later',\n    'Better not tell you now',\n    'Cannot predict now',\n    'Concentrate and ask again',\n    'Don\\'t count on it',\n    'My reply is no',\n    'My sources say no',\n    'Most likely',\n    'Outlook not so good',\n    'Very doubtful'\n    ];\n\n    const answer = possibleAnswers[randomIndex];\n    return (\n      <div className=\"App\">\n        <h1>Welcome to ask Magic 8-ball</h1>\n        <p className=\"info\">Ask a question and tap me for an answer...</p>\n        <input type=\"text\" className=\"question\" value={userInput} onChange={handleInputChange} />\n        <div className=\"eight-ball\">\n          <div className=\"content\" onClick={handleClick}>\n          {error ? <p className=\"error\">{error}</p> :\n            answer ? <p className=\"answer\">{answer}</p> : <p className=\"eight\">8</p>}\n            \n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}